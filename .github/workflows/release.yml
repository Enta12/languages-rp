name: Release Creation

on:
  release:
    types: [published]

jobs:
  build:    
    runs-on: ubuntu-latest
    steps:
    - name: Checkout files
      uses: actions/checkout@v2
      with:
        submodules: recursive

    - name: Substitute Manifest and Download Links For Versioned Ones
      id: sub_manifest_link_version
      uses: microsoft/variable-substitution@v1
      with:
        files: 'module.json'
      env:
        version: ${{github.event.release.tag_name}}
        manifest: https://github.com/${{github.repository}}/releases/download/${{github.event.release.tag_name}}/module.json
        download: https://github.com/${{github.repository}}/releases/download/${{github.event.release.tag_name}}/languages-rp.zip
        url: https://github.com/${{github.repository}}
        changelog: https://raw.githubusercontent.com/${{ github.repository }}/main/CHANGELOG.md

    - name: Create archive
      run:  zip languages-rp.zip module.json -r lang scripts styles templates -x ".*"

    - name: create CHANGELOG.md
      run: |
        echo "# Changelog" > CHANGELOG.md
        echo "" >> CHANGELOG.md
        echo "## ${{ github.event.release.tag_name }}" >> CHANGELOG.md
        echo "" >> CHANGELOG.md
        echo "${{ github.event.release.body }}" >> CHANGELOG.md
    - name: Commit CHANGELOG.md to main
      run: |
        git config user.name "github-actions[bot]"
        git config user.email "github-actions[bot]@users.noreply.github.com"
        git checkout main
        git add CHANGELOG.md
        git commit -m "chore: update changelog for ${{ github.event.release.tag_name }}"
        git push

    - name: Update Release with Files
      id: create_version_release
      uses: ncipollo/release-action@v1
      with:
        allowUpdates: true
        name: ${{ github.event.release.name }} 
        draft: ${{ github.event.release.unpublished }}
        prerelease: ${{ github.event.release.prerelease }}
        token: ${{ secrets.GITHUB_TOKEN }}
        artifacts: './module.json, ./languages-rp.zip'
        tag: ${{ github.event.release.tag_name }}
        body: ${{ github.event.release.body }}        
        makeLatest: ${{ github.event.release.prerelease && 'false' || 'legacy' }}

    - name: Publish Module to FoundryVTT Website  
      if: ${{ !github.event.release.prerelease }}
      id: publish-to-foundry-website
      uses: cs96and/FoundryVTT-release-package@v1
      with:
        package-token: ${{ secrets.PACKAGE_TOKEN }}
        manifest-url: https://github.com/${{github.repository}}/releases/download/${{github.event.release.tag_name}}/module.json
        notes-url: https://raw.githubusercontent.com/${{ github.repository }}/main/CHANGELOG.md
